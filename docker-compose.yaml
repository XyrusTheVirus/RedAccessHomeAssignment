services:
  api:
    build: .
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    env_file:
      - .env
    volumes:
      - ./app:/app
      - ./scripts/start.sh:/app/start.sh
      - ./migrations:/app/migrations
      - ./requirements.txt:/app/requirements.txt

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  migrate:
    build: .
    container_name: migrate
    command: bash -c "pip install -r requirements.txt && pymongo-migrate migrate -u 'mongodb://mongo:27017/app' -m migrations"
    depends_on:
      - mongo
    volumes:
      - ./migrations:/app/migrations
      - ./mongo_migrate.json:/app/mongo_migrate.json
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - .env

  redis:
    image: redis:7
    container_name: redis
    restart: always

  celery-worker:
    build: .
    container_name: celery-worker
    command: bash -c "pip install -r requirements.txt && celery -A celery_worker worker --loglevel=info"
    depends_on:
      - redis
    volumes:
      - ./app:/app
      - ./scripts/start.sh:/app/start.sh
      - ./migrations:/app/migrations
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - .env

  celery-beat:
    build: .
    container_name: celery-beat
    command: bash -c "pip install -r requirements.txt && celery -A celery_worker beat --loglevel=info"
    depends_on:
      - redis
    volumes:
      - ./app:/app
      - ./scripts/start.sh:/app/start.sh
      - ./migrations:/app/migrations
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - .env

volumes:
  mongo_data:

